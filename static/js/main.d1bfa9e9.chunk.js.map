{"version":3,"sources":["components/firebase.js","components/DashContent.js","pages/DashPage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","DashContent","mountGetTimer","firestoreTimer","setInterval","firestoreGet","firestoreDbRef","collection","doc","get","then","setState","data","state","this","clearInterval","content_control_relay","Button","content_control_onstatus","ACStatus","content_control_iron","content_control_irof","content_control_temp","Segment","Group","vertical","TemperaturAdj","content_control","horizontal","padded","content_temp1","Temperatur1","content_temp2","Temperatur2","content_temp3","Temperatur3","content_temp4","Temperatur4","content_arusp","CurrentPeak","content_arusr","CurrentRMS","dash_content","as","textAlign","block","Container","fluid","Grid","columns","column","Row","stretched","Column","width","Component","firestore","DashPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1bfa9e9.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCTyDHjx2SNircz8h0I0uaDnGyLx3PV7o8\",\r\n  authDomain: \"test-db-4aa92.firebaseapp.com\",\r\n  databaseURL: \"https://test-db-4aa92.firebaseio.com\",\r\n  projectId: \"test-db-4aa92\",\r\n  storageBucket: \"test-db-4aa92.appspot.com\",\r\n  messagingSenderId: \"532911063400\",\r\n  appId: \"1:532911063400:web:737f284830b529fe3ed6dd\",\r\n  measurementId: \"G-V05SCC6LXF\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default firebase;","/************************** Import library/fungsi ****************************/\r\nimport React, { Component, Fragment } from 'react';\r\n\r\nimport { firestoreDbRef } from '../pages/DashPage';\r\n\r\n// modul-modul SemanticUI\r\nimport { Header as SemanticHeader } from 'semantic-ui-react'\r\nimport { Container } from 'semantic-ui-react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport { Button } from 'semantic-ui-react';\r\n/************************ Deklarasi objek/variabel ***************************/\r\n\r\n/************************ Deklarasi kelas/komponen ***************************/\r\nclass DashContent extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mountGetTimer();\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.firestoreTimer);\r\n  }\r\n\r\n  mountGetTimer = () => {\r\n    this.firestoreTimer = setInterval(() => {\r\n      this.firestoreGet();\r\n    },1000);\r\n  }\r\n\r\n  firestoreGet = () => {\r\n    firestoreDbRef.collection('Node-React').doc('Main-Data').get().then((doc) => {\r\n      this.setState({\r\n        data: doc.data()\r\n      });\r\n    }); \r\n  }\r\n\r\n  render() {\r\n    const {data} = this.state;\r\n    \r\n    const content_control_relay = (\r\n      <Fragment>\r\n        <p>Relay Switch</p>\r\n        <Button>Press</Button>\r\n        <h2>OFF</h2>\r\n      </Fragment>\r\n    );\r\n\r\n    const content_control_onstatus = (\r\n      <Fragment>\r\n        <p>Status On</p>\r\n        <h2>{data.ACStatus ? \"ON\" : \"OFF\"}</h2>\r\n      </Fragment>\r\n    );\r\n\r\n    const content_control_iron = (\r\n      <Fragment>\r\n        <p>IR Signal On</p>\r\n        <Button>Press</Button>\r\n      </Fragment>\r\n    );\r\n\r\n    const content_control_irof = (\r\n      <Fragment>\r\n        <p>IR Signal Off</p>\r\n        <Button>Press</Button>\r\n      </Fragment>\r\n    );\r\n\r\n    const content_control_temp = (\r\n      <Fragment>\r\n      <Segment>\r\n        <Button.Group vertical=\"true\">\r\n          <Button>Up</Button>\r\n          <Button>Down</Button>\r\n        </Button.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <h2>{data.TemperaturAdj} &deg;C</h2>\r\n      </Segment>\r\n      </Fragment>\r\n    );\r\n\r\n    const content_control = (\r\n      <Fragment>\r\n        <Segment.Group>\r\n          <Segment.Group horizontal=\"true\">\r\n            <Segment padded=\"true\">\r\n              {content_control_relay}\r\n            </Segment>\r\n            <Segment padded=\"true\">\r\n              {content_control_onstatus}\r\n            </Segment>\r\n          </Segment.Group>\r\n          <Segment.Group horizontal=\"true\">\r\n            <Segment padded=\"true\">\r\n              {content_control_iron}\r\n            </Segment>\r\n            <Segment padded=\"true\">\r\n              {content_control_irof}\r\n            </Segment>\r\n          </Segment.Group>\r\n          <Segment.Group horizontal=\"true\">\r\n            {content_control_temp}\r\n          </Segment.Group>\r\n        </Segment.Group>\r\n      </Fragment>\r\n    );\r\n\r\n    const content_temp1 = (\r\n      <Fragment>\r\n        <p>Temperatur Aktual 1</p>\r\n        <h2>{data.Temperatur1} &deg;C</h2>\r\n      </Fragment>\r\n    );\r\n\r\n    const content_temp2 = (\r\n      <Fragment>\r\n        <p>Temperatur Aktual 2</p>\r\n        <h2>{data.Temperatur2} &deg;C</h2>\r\n      </Fragment>\r\n    );\r\n\r\n    const content_temp3 = (\r\n      <Fragment>\r\n        <p>Temperatur Aktual 3</p>\r\n        <h2>{data.Temperatur3} &deg;C</h2>\r\n      </Fragment>\r\n    );\r\n\r\n    const content_temp4 = (\r\n      <Fragment>\r\n        <p>Temperatur Aktual 4</p>\r\n        <h2>{data.Temperatur4} &deg;C</h2>\r\n      </Fragment>\r\n    );\r\n\r\n    const content_arusp = (\r\n      <Fragment>\r\n        <p>Arus Peak</p>\r\n        <h2>{data.CurrentPeak} A</h2>\r\n      </Fragment>\r\n    );\r\n\r\n    const content_arusr = (\r\n      <Fragment>\r\n        <p>Arus RMS</p>\r\n        <h2>{data.CurrentRMS} A</h2>\r\n      </Fragment>\r\n    );\r\n\r\n    const dash_content = (\r\n      <Fragment>\r\n        <SemanticHeader as='h1' textAlign='center' block>\r\n          Monitoring AC Laboratorium Instrumentasi Industri ITB\r\n        </SemanticHeader>\r\n        <Container fluid>\r\n          <Grid columns={3} column={3}>\r\n            <Grid.Row stretched=\"true\">\r\n              <Grid.Column textAlign='center' width={5}>\r\n                {content_control}\r\n              </Grid.Column>\r\n              <Grid.Column textAlign='center' width={6}>\r\n                <Segment.Group>\r\n                  <Segment.Group horizontal=\"true\">\r\n                    <Segment padded=\"true\">\r\n                      {content_temp1}\r\n                    </Segment>\r\n                    <Segment padded=\"true\">\r\n                      {content_temp2}\r\n                    </Segment>\r\n                  </Segment.Group>\r\n                  <Segment.Group horizontal=\"true\">\r\n                    <Segment padded=\"true\">\r\n                      {content_temp3}\r\n                    </Segment>\r\n                    <Segment padded=\"true\">\r\n                      {content_temp4}\r\n                  </Segment>\r\n                  </Segment.Group>\r\n                </Segment.Group>\r\n                <Segment padded=\"true\">\r\n                  chart kiri\r\n                </Segment>\r\n              </Grid.Column>\r\n              <Grid.Column textAlign='center' width={5}>\r\n                <Segment.Group vertical=\"true\">\r\n                  <Segment padded=\"true\">\r\n                      {content_arusp}\r\n                  </Segment>\r\n                  <Segment padded=\"true\">\r\n                      {content_arusr}\r\n                  </Segment>\r\n                </Segment.Group>\r\n                <Segment padded=\"true\">\r\n                  chart kanan\r\n                </Segment>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Container>\r\n      </Fragment>\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        {dash_content}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashContent;","/************************** Import library/fungsi ****************************/\r\nimport React, { Component, Fragment } from 'react';\r\n\r\n// mount firebase sekali saja dalam aplikasi, tetapi di dalam folder ./src\r\nimport firebase from '../components/firebase';\r\n\r\n// komponen yang dimuat di dalam page\r\nimport DashContent from '../components/DashContent'\r\n\r\n/************************ Deklarasi objek/variabel ***************************/\r\nexport var firestoreDbRef = firebase.firestore();\r\n\r\n/************************ Deklarasi kelas/komponen ***************************/\r\nclass DashPage extends Component {\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <DashContent />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DashPage;","/************************** Import library/fungsi ****************************/\nimport DashPage from './pages/DashPage'\n\nimport 'semantic-ui-css/semantic.min.css'\n/************************ Deklarasi objek/variabel ***************************/\n\n/************************ Deklarasi kelas/komponen ***************************/\nfunction App() {\n  return (\n    <div>\n      <DashPage />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}